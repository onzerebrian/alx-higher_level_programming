>>> BG = __import__('7-base_geometry').BaseGeometry
>>> bg = BG()
>>> bg.integer_validator("hey", 9)
>>> bg.integer_validator("hey", "you")
Traceback (most recent call last):
    ...
TypeError: hey must be an integer
>>> bg.integer_validator("hey")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator(10, "you")
Traceback (most recent call last):
    ...
TypeError: 10 must be an integer
>>> bg.integer_validator("hey", [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", (1, 2, 3))
Traceback (most recent call last):
    ...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", True)
Traceback (most recent call last):
    ...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", {1, 2})
Traceback (most recent call last):
    ...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", None)
Traceback (most recent call last):
    ...
TypeError: hey must be an integer
>>> bg.integer_validator("hey", 0)
Traceback (most recent call last):
    ...
ValueError: hey must be greater than 0
>>> bg.integer_validator("hey", -5)
Traceback (most recent call last):
    ...
ValueError: hey must be greater than 0
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented
